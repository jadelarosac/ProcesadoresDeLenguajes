programa_principal()
{
   declarar
      entero ve ;
   real vf ;
   caracter vc ;
   booleano vl ;
   entero pe[5], pe2[2,2] ;
   real pf[5], pf2[2,10] ;
   caracter pc[2,2], pc2[5];
   booleano pl[300,1000];
   fin declarar
      entero funcionA (entero a1, real a2, caracter a3)
      {
         declarar
            entero x1, x2 ;
         fin declarar
            caracter funcionB (caracter b1, booleano b2)
            {
               declarar
                  real xf, x2 ;
               fin declarar
                  real funcionC (booleano c1, entero c2)
                  {
                     declarar
                        real x1 ;
                     fin declarar
                        x1= 1.3 ;
                     si (c2>10)
                        c2= c2-1 ;
                     si no
                        x1= 3.1 ;
                     retornar x1 ;
                  }
               xf= functionC(cierto, 10);
               x2= xf*(funcionC(falso,1)-funcionC(cierto,23)) / 10.0;
               mientras (x2*funcionC(falso,1)-xf<10.0)
                  x2= x2*xf ;
            }
         retornar 5;
      }
   real funcionD (real d1)
   {
      declarar
         caracter dato ;
      entero valor ;
      fin declarar
         caracter funcionE (caracter e1, caracter e2)
         {
            leer  e1, e2 ;
            si (e1=='a')
               retornar e1 ;
            si no si (e1=='b')
               retornar e2 ;
            si no
               retornar ' ';
         }
      leer valor ;
      si (d1>0.0)
      {
         declarar
            entero dato ;
         fin declarar

            dato= 2 ;
         dato= valor*20/dato ;
      }
      si no {
         valor= valor * 100 ;
         d1= d1/1000.0 ;
      }
      retornar d1 ;
   }
   pe[1]=10;
   pf=[5.1,2.03,3.1415,0.01,1.0];
   pc[1,1]= '#' ;
   si ((pe[1]-20) == 20)
      ve= pe[2];
   si no
      pe2= pe2 ** pe2 ;
   pe[3]= pe2[0,1] - pe[2] + 10 * (20/2000) ;
}
